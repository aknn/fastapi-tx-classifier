FastAPI Template Project Structure (Up-to-date)
===============================================

/workspaces/fastapi-template/
â”œâ”€â”€ .devcontainer/
â”œâ”€â”€ .dockerignore
â”œâ”€â”€ .dvc/
â”œâ”€â”€ .dvcignore
â”œâ”€â”€ .git/
â”œâ”€â”€ .github/
â”œâ”€â”€ .gitignore
â”œâ”€â”€ .mypy_cache/
â”œâ”€â”€ .pytest_cache/
â”œâ”€â”€ .pre-commit-config.yaml
â”œâ”€â”€ .ruff_cache/
â”œâ”€â”€ .vscode/
â”œâ”€â”€ ARCHITECTURE.md                  # ðŸ“‹ Design decisions and system architecture
â”œâ”€â”€ CHANGELOG.md                     # ðŸ“ˆ Track accuracy improvements and changes
â”œâ”€â”€ CONTRIBUTING.md
â”œâ”€â”€ Dockerfile
â”œâ”€â”€ docker-compose.yml
â”œâ”€â”€ Makefile
â”œâ”€â”€ PERFORMANCE_ANALYSIS_REPORT.md
â”œâ”€â”€ ML_PHASES.md
â”œâ”€â”€ README.md
â”œâ”€â”€ classification_config.json
â”œâ”€â”€ data/                            # Data directory
â”œâ”€â”€ dev-requirements.txt
â”œâ”€â”€ fastapi_tx_classifier/           # Main package (single source of truth)
â”‚   â”œâ”€â”€ __init__.py
â”‚   â”œâ”€â”€ classification_config.json   # Package config
â”‚   â”œâ”€â”€ classification_logic.py
â”‚   â”œâ”€â”€ config.py
â”‚   â”œâ”€â”€ exceptions.py
â”‚   â”œâ”€â”€ main.py                      # FastAPI app entrypoint
â”‚   â”œâ”€â”€ model_registry.py
â”‚   â”œâ”€â”€ models.py
â”‚   â”œâ”€â”€ mypy.ini
â”‚   â”œâ”€â”€ redis_client.py
â”‚   â””â”€â”€ routers/                     # API routers
â”‚       â”œâ”€â”€ __init__.py
â”‚       â”œâ”€â”€ classification.py
â”‚       â”œâ”€â”€ messages.py
â”‚       â”œâ”€â”€ system.py
â”‚       â””â”€â”€ transactions.py
â”œâ”€â”€ folder_structure.txt             # Project structure overview
â”œâ”€â”€ main.py                          # Entrypoint imports from package
â”œâ”€â”€ mlruns/                          # MLflow run artifacts (can be gitignored)
â”œâ”€â”€ pyproject.toml                   # Poetry/packaging config
â”œâ”€â”€ requirements.txt
â”œâ”€â”€ scripts/
â”‚   â””â”€â”€ api_tester.py                # Test scripts
â”œâ”€â”€ test_ci_formatting.md            # Formatting CI guide
â”œâ”€â”€ tests/                           # ðŸ§ª Consolidated test directory
    â”œâ”€â”€ __init__.py
    â”œâ”€â”€ conftest.py
    â”œâ”€â”€ rule_based_test_results.csv  # Raw test output
    â”œâ”€â”€ run_all_tests.py             # Test runner script
    â”œâ”€â”€ run_performance_test.py      # Performance test runner
    â”œâ”€â”€ test_api_endpoints.py
    â”œâ”€â”€ test_main.py
    â”œâ”€â”€ test_rule_based_performance.py
    â””â”€â”€ test_transactions.py
â””â”€â”€ examples/                        # ðŸ“š API usage examples and samples
    â”œâ”€â”€ README.md                    # Examples overview and quick start
    â”œâ”€â”€ basic_usage.py               # Simple API interactions
    â”œâ”€â”€ batch_operations.py          # Bulk processing examples
    â”œâ”€â”€ curl_examples.sh             # Command-line API calls
    â”œâ”€â”€ postman_collection.json      # Postman testing collection
    â””â”€â”€ python_client.py             # Full-featured Python client
